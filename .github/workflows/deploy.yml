name: Update Version and Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main  # or your default branch name

permissions:
  contents: write
  actions: write

jobs:
  update-and-deploy:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true) || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
      
      - name: Update Version
        id: update
        run: |
          # Get current version from file
          CURRENT_VERSION=$(grep -o 'export const APP_VERSION = "[^"]*"' src/config/version.ts | cut -d'"' -f2)
          
          # Parse version numbers
          IFS='.' read -r major minor patch <<< "${CURRENT_VERSION#v}"
          
          # Check for version bump keyword in commit message or PR title
          if [[ "${{ github.event.head_commit.message }}" == *"[minor]"* ]] || [[ "${{ github.event.pull_request.title }}" == *"[minor]"* ]]; then
            # Increment minor version and reset patch
            new_minor=$((minor + 1))
            new_patch=0
            NEW_VERSION="v$major.$new_minor.$new_patch"
          else
            # Increment patch version
            new_patch=$((patch + 1))
            NEW_VERSION="v$major.$minor.$new_patch"
          fi
          
          # Update version in file
          sed -i "s/export const APP_VERSION = \"[^\"]*\"/export const APP_VERSION = \"$NEW_VERSION\"/" src/config/version.ts
          
          # Commit and push changes
          git add src/config/version.ts
          git commit -m "chore: bump version to $NEW_VERSION"
          git push

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Deploy to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          source: "dist/*"
          target: "/var/www/html"
          strip_components: 1

      - name: Restart Nginx
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            sudo systemctl restart nginx 